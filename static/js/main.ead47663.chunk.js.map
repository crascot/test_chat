{"version":3,"sources":["components/blocks/first-block/firstBlockStyle.js","components/blocks/first-block/firstBlock.jsx","features/peoples/peoplesSlice.js","components/blocks/second-block/peoples/peoplesStyle.js","components/blocks/second-block/peoples/peoples.jsx","components/blocks/second-block/secondBlockStyle.js","components/blocks/second-block/secondBlock.jsx","api.js","features/message/messageSlice.js","components/blocks/third-block/contact-info/contactInfo.jsx","components/blocks/third-block/chat/message/message.jsx","components/blocks/third-block/chat/chat.jsx","components/blocks/third-block/send/send.jsx","components/blocks/third-block/thirdBlock.jsx","components/blocks/fourth-block/fourthBlockStyle.js","components/blocks/fourth-block/fourthBlock.jsx","components/main.jsx","App.js","features/store.js","index.js"],"names":["firstBlockStyle","avatarSize","width","height","iconSize","FirstBlock","react_default","a","createElement","Grid","className","item","xs","container","direction","justifyContent","alignItems","Avatar","sx","IconButton","Chat_default","Phone_default","Favorite_default","Settings_default","peoplesSlice","createSlice","name","initialState","id","contacts","currentContact","reducers","getId","state","action","payload","getContacts","getCurrentContact","actions","peoplesStyle","block","display","checkIcon","marginBottom","marginLeft","avatar","marginRight","Peoples","_ref","props","dispatch","useDispatch","onClick","style","src","Typography","variant","mb","gutterBottom","component","Check_default","username","secondBlockStyle","grid","padding","chat","margin","SecondBlock","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","useSelector","peoples","contactsBlock","filter","contact","toLowerCase","includes","toLocaleLowerCase","map","peoples_peoples","key","useEffect","Promise","resolve","fetch","then","response","json","user","find","TextField","value","onChange","event","target","placeholder","fullWidth","color","messageSlice","message","getChat","push","writeMessage","ContactInfo","Circle_default","mt","ml","htmlFor","files","length","fileReader","FileReader","onload","mess","align","img","result","readAsDataURL","type","accept","aria-label","AttachFile_default","Message","alt","Chat","currentChat","chat_message_message","Math","random","Send","InputBase","e","Send_default","ThirdBlock","contactInfo","chat_Chat","send","fourthBlockStyle","main","backgroundColor","contactData","textAlign","marginTop","fontSize","iconPhone","iconVideo","iconHeart","FourthBlock","LocalPhone_default","Videocam_default","Main","first_block_firstBlock","second_block_secondBlock","third_block_thirdBlock","fourth_block_fourthBlock","App","components_main","configureStore","reducer","document","getElementById","createRoot","render","es","store","src_App"],"mappings":"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","file":"static/js/main.ead47663.chunk.js","sourcesContent":["export const firstBlockStyle = {\r\n    avatarSize: {\r\n        width: 66,\r\n        height: 66,\r\n    },\r\n    iconSize: {\r\n        width: 36,\r\n        height: 36,\r\n    }\r\n}","import React from 'react';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { Grid, Avatar, IconButton } from '@mui/material';\r\nimport { firstBlockStyle } from './firstBlockStyle';\r\nimport './firstBlock.css';\r\n\r\n\r\nconst FirstBlock = () => {\r\n    return (\r\n        <Grid className='firstBlock' item xs={1}>\r\n            <div className='container'>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"flex-start\"\r\n                    alignItems=\"center\">\r\n                    <Grid item className='box'>\r\n                        <Avatar sx={firstBlockStyle.avatarSize} />\r\n                    </Grid>\r\n                    <Grid className='box' item>\r\n                        <IconButton className='icon'>\r\n                            <ChatIcon sx={firstBlockStyle.iconSize} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid className='box' item>\r\n                        <IconButton className='icon'>\r\n                            <PhoneIcon sx={firstBlockStyle.iconSize} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid className='box' item>\r\n                        <IconButton className='icon'>\r\n                            <FavoriteIcon sx={firstBlockStyle.iconSize} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justifyContent=\"flex-end\"\r\n                    alignItems=\"center\">\r\n                    <Grid item className='box'>\r\n                        <IconButton className='icon'>\r\n                            <SettingsIcon sx={firstBlockStyle.iconSize} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default FirstBlock;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  contacts: [],\r\n  currentContact: {}\r\n}\r\n\r\nexport const peoplesSlice = createSlice({\r\n  name: 'peoples',\r\n  initialState,\r\n  reducers: {\r\n    getId: (state, action) => { state.id = action.payload },\r\n    getContacts: (state, action) => { state.contacts = action.payload },\r\n    getCurrentContact: (state, action) => { state.currentContact = action.payload }\r\n  }\r\n})\r\n\r\nexport const { getId, getContacts, getCurrentContact } = peoplesSlice.actions\r\n\r\nexport default peoplesSlice.reducer","export const peoplesStyle = {\r\n    container: {\r\n        width: '100%'\r\n    },\r\n    block: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    checkIcon: {\r\n        marginBottom: 7,\r\n        marginLeft: 7\r\n    },\r\n    avatar: {\r\n        marginRight: 15,\r\n        width: 50,\r\n        height: 50\r\n    }\r\n}","import React from 'react';\r\nimport { Avatar, Typography } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport './peoples.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getId } from '../../../../features/peoples/peoplesSlice';\r\nimport { peoplesStyle } from './peoplesStyle';\r\n\r\n\r\nconst Peoples = ({ props }) => {\r\n    const dispatch = useDispatch()\r\n    const onCurrentId = () => dispatch(getId(props.id))\r\n\r\n    return (\r\n        <div className='peoples' onClick={onCurrentId}>\r\n            <Avatar style={peoplesStyle.avatar} src={props.avatar} />\r\n            <div style={peoplesStyle.container}>\r\n                <div style={peoplesStyle.block}>\r\n                    <Typography variant=\"h6\" mb={0} gutterBottom component=\"div\">\r\n                        {props.name}\r\n                    </Typography>\r\n                    <CheckIcon style={peoplesStyle.checkIcon} />\r\n                </div>\r\n                <div style={peoplesStyle.block}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                        {props.username}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                        9:30\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Peoples;","export const secondBlockStyle = {\r\n    grid: {padding: 15},\r\n    chat: {margin: '15px 0 -15px 0'}\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Grid, TextField, Typography } from '@mui/material';\r\nimport Peoples from './peoples/peoples';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './secondBlock.css';\r\nimport { secondBlockStyle } from './secondBlockStyle';\r\nimport { getContacts, getCurrentContact } from '../../../features/peoples/peoplesSlice';\r\nimport { Users } from '../../../api';\r\n\r\n\r\nconst SecondBlock = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [search, setSearch] = useState('')\r\n    const id = useSelector(state => state.peoples.id)\r\n    const contacts = useSelector(state => state.peoples.contacts)\r\n\r\n    const findContact = contacts.filter(contact => contact.name.toLowerCase().includes(search.toLocaleLowerCase()))\r\n    const contactsBlock = findContact.map((props => <Peoples props={props} key={props.id} />))\r\n\r\n    useEffect(() => {\r\n        Users()\r\n            .then(user => {\r\n                dispatch(getContacts(user))\r\n            })\r\n    }, [])\r\n    dispatch(getCurrentContact(contacts.find(user => user.id === id)))\r\n\r\n    return (\r\n        <Grid className='secondBlock' item xs={2}>\r\n            <Grid\r\n                style={secondBlockStyle.grid}\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <TextField value={search} onChange={(event) => setSearch(event.target.value)} placeholder=\"Search\" fullWidth />\r\n                <Typography style={secondBlockStyle.chat} color='gray' variant=\"caption\" display=\"block\" gutterBottom>\r\n                    Chats\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs className='contacts'>\r\n                {contactsBlock}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default SecondBlock;","export const Users = () => {\r\n    return new Promise(resolve => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(json => resolve(json))\r\n    })\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  chat: [],\r\n  message: ''\r\n}\r\n\r\nexport const messageSlice = createSlice({\r\n  name: 'message',\r\n  initialState,\r\n  reducers: {\r\n    getChat: (state, action) => { state.chat.push(action.payload) },\r\n    writeMessage: (state, action) => { state.message = action.payload },\r\n  }\r\n})\r\n\r\nexport const { getChat, writeMessage } = messageSlice.actions\r\n\r\nexport default messageSlice.reducer","import React from \"react\";\r\nimport { Avatar, Grid, IconButton, Typography } from \"@mui/material\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './contact-info.css';\r\nimport { getChat } from \"../../../../features/message/messageSlice\";\r\n\r\nconst ContactInfo = () => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector(state => state.peoples.id)\r\n    const currentContact = useSelector(state => state.peoples.currentContact)\r\n\r\n    const sendImage = (event) => {\r\n        let target = event.target;\r\n        if (!target.files.length) return;\r\n        let fileReader = new FileReader();\r\n        fileReader.onload = function () {\r\n            let mess = {\r\n                id: id,\r\n                align: 'right',\r\n                img: true,\r\n                message: fileReader.result\r\n            }\r\n            dispatch(getChat(mess))\r\n        }\r\n        fileReader.readAsDataURL(target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            item xs={1} container\r\n            className=\"contact-info\"\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n        >\r\n            <Grid\r\n                item xs={11} container\r\n                className='contact-info-left'\r\n                direction=\"row\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Avatar className=\"contact-avatar\" src={currentContact.avatar} />\r\n                <Grid direction=\"column\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        {currentContact.name}\r\n                    </Typography>\r\n                    <span className='contact-status'>\r\n                        <CircleIcon color='success' />\r\n                        <Typography mt={0.1} mb={0} ml={1} variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Online\r\n                        </Typography>\r\n                    </span>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={1} className='send-image'>\r\n                <label htmlFor=\"icon-button-file\">\r\n                    <input onChange={sendImage} id=\"icon-button-file\" type=\"file\" accept=\"image/jpeg,image/png,image/gif\" />\r\n                    <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                        <AttachFileIcon className='contact-button' />\r\n                    </IconButton>\r\n                </label>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ContactInfo;","import React from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport './message.css';\r\n\r\n\r\nconst Message = ({ align, img, message }) => {\r\n    return (\r\n        <Grid container justifyContent={align} className='message'>\r\n            {\r\n                img ?\r\n                    <img src={message} className='image' alt='img' />\r\n                    :\r\n                    <Typography className=\"text\">{message}</Typography>\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\nexport default Message;","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Message from './message/message';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function Chat() {\r\n    const id = useSelector(state => state.peoples.id)\r\n    const chat = useSelector(state => state.message.chat)\r\n\r\n    const currentChat = chat.filter(message => message.id === id && message.message)\r\n\r\n    return (\r\n        <Grid\r\n            item xs={9}\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n            className='chat'\r\n        >\r\n            {\r\n                currentChat.map(message => <Message align={message.align} img={message.img} message={message.message} key={Math.random()} />)\r\n            }\r\n        </Grid>\r\n    )\r\n}","import React from \"react\";\r\nimport { Grid, IconButton, InputBase } from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getChat, writeMessage } from \"../../../../features/message/messageSlice\";\r\n\r\nconst Send = () => {\r\n    const dispatch = useDispatch()\r\n    const id = useSelector(state => state.peoples.id)\r\n    const message = useSelector(state => state.message.message)\r\n\r\n    const onWriteMessage = (e) => dispatch(writeMessage(e.target.value))\r\n    const sendMessage = () => {\r\n        let mess = {\r\n            id: id,\r\n            align: 'right',\r\n            message: message\r\n        }\r\n\r\n        dispatch(getChat(mess))\r\n        dispatch(writeMessage(''))\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            item\r\n            container\r\n            className='send'\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n        >\r\n            <Grid item xs={12}>\r\n                <InputBase\r\n                    value={message}\r\n                    onChange={onWriteMessage}\r\n                    fullWidth\r\n                    placeholder=\"Write Message...\"\r\n                    className='send-input'\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <IconButton className='send-button' onClick={sendMessage}>\r\n                    <SendIcon className='send-icon' />\r\n                </IconButton>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Send;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ContactInfo from './contact-info/contactInfo';\r\nimport Chat from './chat/chat';\r\nimport Send from './send/send';\r\nimport { Grid, Typography } from '@mui/material';\r\nimport './thirdBlock.css';\r\n\r\n\r\nconst ThirdBlock = () => {\r\n    const id = useSelector(state => state.peoples.id)\r\n\r\n    return (\r\n        <Grid className='thirty-block'\r\n            item xs\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"stretch\"\r\n        >\r\n            {\r\n                id === 0 ?\r\n                    <Grid className='zero-id'\r\n                        item xs\r\n                        container\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                            Нажмите на контакт чтобы начать переписку\r\n                        </Typography>\r\n                    </Grid>\r\n                    :\r\n                    <Grid className='contact-id'\r\n                        item xs\r\n                        container\r\n                        direction=\"column\"\r\n                        justifyContent=\"space-between\"\r\n                        alignItems=\"stretch\"\r\n                    >\r\n                        <ContactInfo />\r\n                        <Chat />\r\n                        <Send />\r\n                    </Grid>\r\n            }\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default ThirdBlock","export const fourthBlockStyle = {\r\n    main: {\r\n        backgroundColor: 'white'\r\n    },\r\n    avatar: {\r\n        width: '15vw',\r\n        height: '15vw',\r\n        margin: '0 auto',\r\n    },\r\n    contactData: {\r\n        width: '100%'\r\n    },\r\n    name: {\r\n        textAlign: 'center',\r\n        marginTop: 25,\r\n        fontSize: '2.5vw'\r\n    },\r\n\r\n    iconPhone: { color: '#0093E9' },\r\n    iconVideo: { color: '#0093E9' },\r\n    iconHeart: { color: '#ff0000' },\r\n}","import React from \"react\";\r\nimport { Grid, Avatar, Typography, IconButton } from \"@mui/material\";\r\nimport { fourthBlockStyle } from \"./fourthBlockStyle\";\r\nimport './fourthBlock.css';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport VideocamIcon from '@mui/icons-material/Videocam';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst FourthBlock = () => {\r\n    const id = useSelector(state => state.peoples.id)\r\n    const currentContact = useSelector(state => state.peoples.currentContact)\r\n\r\n    if (id !== 0) return (\r\n        <Grid item xs={3}\r\n            style={fourthBlockStyle.main}\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"stretch\"\r\n        >\r\n            <Grid item xs={6} justifyContent='center' alignItems='center' container>\r\n                <div style={fourthBlockStyle.contactData}>\r\n                    <Avatar style={fourthBlockStyle.avatar} src={currentContact.avatar} />\r\n                    <Typography style={fourthBlockStyle.name} variant=\"h4\" gutterBottom component=\"div\">\r\n                        {currentContact.name}\r\n                    </Typography>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={1}\r\n                className='connection'\r\n                direction=\"row\"\r\n                justifyContent='space-between'\r\n                alignItems='center'\r\n                container\r\n            >\r\n                <IconButton style={fourthBlockStyle.iconPhone}><LocalPhoneIcon /></IconButton>\r\n                <IconButton style={fourthBlockStyle.iconVideo}><VideocamIcon /></IconButton>\r\n                <IconButton style={fourthBlockStyle.iconHeart}><FavoriteIcon /></IconButton>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default FourthBlock;","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport FirstBlock from './blocks/first-block/firstBlock';\r\nimport SecondBlock from './blocks/second-block/secondBlock';\r\nimport ThirdBlock from './blocks/third-block/thirdBlock';\r\nimport FourthBlock from './blocks/fourth-block/fourthBlock';\r\nimport './main.css';\r\n\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <Grid className='main'\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"stretch\"\r\n            container\r\n        >\r\n            <FirstBlock />\r\n            <SecondBlock />\r\n            <ThirdBlock />\r\n            <FourthBlock />\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Main;","import React from 'react';\nimport Main from './components/main';\n\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport messageSlice from './message/messageSlice'\r\nimport peoplesSlice from './peoples/peoplesSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    peoples: peoplesSlice,\r\n    message: messageSlice\r\n  }\r\n})","import React from 'react';\nimport App from './App';\nimport store from './features/store';\nimport { Provider } from 'react-redux';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\n\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n);"],"sourceRoot":""}